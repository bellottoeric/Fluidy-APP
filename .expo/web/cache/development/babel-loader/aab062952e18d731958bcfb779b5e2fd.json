{"ast":null,"code":"var _jsxFileName = \"/home/popeye/project/fluidy/Fluidy-APP/src/MenuComponent.js\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport News from \"./NewsComponent\";\nimport Categories from \"./CategoriesComponent\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nvar Tab = createBottomTabNavigator();\nexport default function Menu() {\n  var _this = this;\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Settings') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Save') {\n            iconName = focused ? 'ios-alarm' : 'ios-alarm';\n          } else if (route.name === 'News') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          } else if (route.name === 'Categories') {\n            iconName = focused ? 'ios-analytics' : 'ios-analytics';\n          } else if (route.name === 'Options') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: News,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Save\",\n    component: News,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"News\",\n    component: News,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Categories\",\n    component: Categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Options\",\n    component: News,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/popeye/project/fluidy/Fluidy-APP/src/MenuComponent.js"],"names":["React","NavigationContainer","News","Categories","createBottomTabNavigator","Ionicons","Tab","Menu","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,IAAP;AACA,OAAOC,UAAP;AAEA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AACA,IAAMC,GAAG,GAAGF,wBAAwB,EAApC;AAEA,eAAe,SAASG,IAAT,GAAgB;AAAA;;AAE7B,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACxC,cAAIC,QAAJ;;AAEA,cAAIL,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AAC7BD,YAAAA,QAAQ,GAAGH,OAAO,GACd,wBADc,GAEd,gCAFJ;AAGD,WAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AAChCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,WAAH,GAAiB,WAAnC;AACD,WAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;AAChCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,cAAH,GAAoB,UAAtC;AACD,WAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,YAAnB,EAAiC;AACtCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,eAAvC;AACD,WAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,SAAnB,EAA8B;AACnCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,cAAH,GAAoB,UAAtC;AACD;;AAED,iBAAO,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AAnB4B,OAAhB;AAAA,KADjB;AAsBE,IAAA,aAAa,EAAE;AACbI,MAAAA,eAAe,EAAE,QADJ;AAEbC,MAAAA,iBAAiB,EAAE;AAFN,KAtBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA0BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAEd,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,EA2BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAEA,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,EA4BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAEA,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,EA6BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,YAAjB;AAA8B,IAAA,SAAS,EAAEC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,EA8BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAED,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,CADF,CADF;AAoCD","sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport News from \"./NewsComponent\"\nimport Categories from \"./CategoriesComponent\"\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nconst Tab = createBottomTabNavigator();\n\nexport default function Menu() {\n  \n  return (\n    <NavigationContainer >\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Settings') {\n              iconName = focused\n                ? 'ios-information-circle'\n                : 'ios-information-circle-outline';\n            } else if (route.name === 'Save') {\n              iconName = focused ? 'ios-alarm' : 'ios-alarm';\n            } else if (route.name === 'News') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            } else if (route.name === 'Categories') {\n              iconName = focused ? 'ios-analytics' : 'ios-analytics';\n            } else if (route.name === 'Options') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            }\n\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}>\n        <Tab.Screen name=\"Settings\" component={News} />\n        <Tab.Screen name=\"Save\" component={News} />\n        <Tab.Screen name=\"News\" component={News} />\n        <Tab.Screen name=\"Categories\" component={Categories} />\n        <Tab.Screen name=\"Options\" component={News} />\n      </Tab.Navigator>\n    </NavigationContainer >\n  );\n}"]},"metadata":{},"sourceType":"module"}