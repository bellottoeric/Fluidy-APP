{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/popeye/project/fluidy/Fluidy-APP/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport * as rssParser from 'react-native-rss-parser';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Header from \"./src/header\";\nimport News from \"./src/News\";\n\nfunction e() {\n  return _regeneratorRuntime.async(function e$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          fetch('https://news.google.com/rss/search?gl=US&hl=en-US&num=10&q=unicorns&ceid=US:en').then(function (response) {\n            return response.text();\n          }).then(function (responseData) {\n            return rssParser.parse(responseData);\n          }).then(function (rss) {\n            console.log(rss.title);\n            console.log(rss.items.length);\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nvar Tab = createBottomTabNavigator();\n\nfunction MyTabs() {\n  var _this = this;\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Settings') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Save') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          } else if (route.name === 'News') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          } else if (route.name === 'Categories') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          } else if (route.name === 'Options') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: Header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Save\",\n    component: News,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"News\",\n    component: News,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Categories\",\n    component: News,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Options\",\n    component: News,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default function App() {\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(MyTabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/popeye/project/fluidy/Fluidy-APP/App.js"],"names":["StatusBar","React","rssParser","NavigationContainer","Header","News","e","fetch","then","response","text","responseData","parse","rss","console","log","title","items","length","createBottomTabNavigator","Ionicons","Tab","MyTabs","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","App","flex"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaView, ScrollView, StyleSheet, Text, View, Share } from 'react-native';\nimport * as rssParser from 'react-native-rss-parser';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport Header from \"./src/header\"\nimport News from \"./src/News\"\n\n\n\nasync function e() {\n  \n  fetch('https://news.google.com/rss/search?gl=US&hl=en-US&num=10&q=unicorns&ceid=US:en')\n    .then((response) => response.text())\n    .then((responseData) => rssParser.parse(responseData))\n    .then((rss) => {\n      console.log(rss.title);\n      console.log(rss.items.length);\n    });\n  /*const result = await Share.share({\n    message: 'nasa-s-osiris message http://www.nasa.gov/press-release/nasa-s-osiris-rex-spacecraft-collects-significant-amount-of-asteroid',\n    \"url\": \"http://www.nasa.gov/press-release/nasa-s-osiris-rex-spacecraft-collects-significant-amount-of-asteroid\",\n    \"title\": \"nasa-s-osiris title\"\n  });*/\n}\n\nimport {  createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabs() {\n  return (\n    <NavigationContainer >\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Settings') {\n              iconName = focused\n                ? 'ios-information-circle'\n                : 'ios-information-circle-outline';\n            } else if (route.name === 'Save') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            } else if (route.name === 'News') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            } else if (route.name === 'Categories') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            } else if (route.name === 'Options') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            }\n\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}>\n        <Tab.Screen name=\"Settings\" component={Header} />\n        <Tab.Screen name=\"Save\" component={News} />\n        <Tab.Screen name=\"News\" component={News} />\n        <Tab.Screen name=\"Categories\" component={News} />\n        <Tab.Screen name=\"Options\" component={News} />\n      </Tab.Navigator>\n    </NavigationContainer >\n  );\n}\nexport default function App() {\n  return (\n    <View style={{ flex: 1 }}>\n      <Header />\n\n      <MyTabs />\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}