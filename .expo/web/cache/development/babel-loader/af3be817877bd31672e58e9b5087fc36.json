{"ast":null,"code":"var _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar utils = require(\"./utils\");\n\nvar model = require(\"../model/rss\");\n\nvar namespaces = require(\"./namespaces\");\n\nvar itunesParser = require(\"./itunes\");\n\nvar getChannelTitle = function getChannelTitle(node) {\n  return utils.getElementTextContent(node, 'title');\n};\n\nvar getChannelLinks = function getChannelLinks(node) {\n  var links = utils.getChildElements(node, 'link');\n  return links.map(function (link) {\n    return {\n      url: link.textContent,\n      rel: link.getAttribute('rel')\n    };\n  });\n};\n\nvar getChannelDescription = function getChannelDescription(node) {\n  return utils.getElementTextContent(node, 'description');\n};\n\nvar getChannelLanguage = function getChannelLanguage(node) {\n  return utils.getElementTextContent(node, 'language');\n};\n\nvar getChannelCopyright = function getChannelCopyright(node) {\n  return utils.getElementTextContent(node, 'copyright');\n};\n\nvar getChannelAuthors = function getChannelAuthors(node) {\n  var authors = utils.getElementTextContentArray(node, 'managingEditor');\n  return authors.map(function (author) {\n    return {\n      name: author\n    };\n  });\n};\n\nvar getChannelLastUpdated = function getChannelLastUpdated(node) {\n  return utils.getElementTextContent(node, 'lastBuildDate');\n};\n\nvar getChannelLastPublished = function getChannelLastPublished(node) {\n  return utils.getElementTextContent(node, 'pubDate');\n};\n\nvar getChannelCategories = function getChannelCategories(node) {\n  var categories = utils.getElementTextContentArray(node, 'category');\n  return categories.map(function (category) {\n    return {\n      name: category\n    };\n  });\n};\n\nvar getChannelImage = function getChannelImage(node) {\n  var imageNodes = utils.getChildElements(node, 'image');\n\n  if (imageNodes.length === 0) {\n    return {\n      url: undefined,\n      title: undefined,\n      description: undefined,\n      width: undefined,\n      height: undefined\n    };\n  }\n\n  var imageNode = imageNodes[0];\n  return {\n    url: utils.getElementTextContent(imageNode, 'url'),\n    title: utils.getElementTextContent(imageNode, 'title'),\n    description: utils.getElementTextContent(imageNode, 'description'),\n    width: utils.getElementTextContent(imageNode, 'width'),\n    height: utils.getElementTextContent(imageNode, 'height')\n  };\n};\n\nvar getItemTitle = function getItemTitle(node) {\n  return utils.getElementTextContent(node, 'title');\n};\n\nvar getItemLinks = function getItemLinks(node) {\n  var links = utils.getChildElements(node, 'link');\n  return links.map(function (link) {\n    return {\n      url: link.textContent,\n      rel: link.getAttribute('rel')\n    };\n  });\n};\n\nvar getItemDescription = function getItemDescription(node) {\n  return utils.getElementTextContent(node, 'description');\n};\n\nvar getItemContent = function getItemContent(node) {\n  return utils.getElementTextContent(node, 'encoded', namespaces.content);\n};\n\nvar getItemAuthors = function getItemAuthors(node) {\n  var authors = utils.getElementTextContentArray(node, 'author');\n\n  if (authors.length === 0) {\n    authors = utils.getElementTextContentArray(node, 'dc:creator');\n  }\n\n  return authors.map(function (author) {\n    return {\n      name: author\n    };\n  });\n};\n\nvar getItemCategories = function getItemCategories(node) {\n  var categories = utils.getElementTextContentArray(node, 'category');\n\n  if (categories.length === 0) {\n    categories = utils.getElementTextContentArray(node, 'dc:subject');\n  }\n\n  return categories.map(function (category) {\n    return {\n      name: category\n    };\n  });\n};\n\nvar getItemId = function getItemId(node) {\n  return utils.getElementTextContent(node, 'guid');\n};\n\nvar getItemPublished = function getItemPublished(node) {\n  return utils.getElementTextContent(node, 'pubDate') || utils.getElementTextContent(node, 'dc:date');\n};\n\nvar getItemEnclosures = function getItemEnclosures(node) {\n  var enclosures = utils.getChildElements(node, 'enclosure');\n  return enclosures.map(function (enclosure) {\n    return {\n      url: enclosure.getAttribute('url'),\n      length: enclosure.getAttribute('length'),\n      mimeType: enclosure.getAttribute('type')\n    };\n  });\n};\n\nvar mapChannelFields = function mapChannelFields(document) {\n  var channelNodes = utils.getElements(document, 'channel');\n\n  if (!channelNodes || channelNodes.length === 0) {\n    throw new Error('Could not find channel node');\n  }\n\n  var channelNode = channelNodes[0];\n  return {\n    title: getChannelTitle(channelNode),\n    links: getChannelLinks(channelNode),\n    description: getChannelDescription(channelNode),\n    language: getChannelLanguage(channelNode),\n    copyright: getChannelCopyright(channelNode),\n    authors: getChannelAuthors(channelNode),\n    lastUpdated: getChannelLastUpdated(channelNode),\n    lastPublished: getChannelLastPublished(channelNode),\n    categories: getChannelCategories(channelNode),\n    image: getChannelImage(channelNode),\n    itunes: itunesParser.parseChannel(channelNode)\n  };\n};\n\nvar mapItems = function mapItems(document) {\n  var itemNodes = utils.getElements(document, 'item');\n  return itemNodes.map(function (item) {\n    return {\n      title: getItemTitle(item),\n      links: getItemLinks(item),\n      description: getItemDescription(item),\n      content: getItemContent(item),\n      id: getItemId(item),\n      authors: getItemAuthors(item),\n      categories: getItemCategories(item),\n      published: getItemPublished(item),\n      enclosures: getItemEnclosures(item),\n      itunes: itunesParser.parseItem(item)\n    };\n  });\n};\n\nexports.parse = function (document) {\n  return _objectSpread(_objectSpread(_objectSpread({}, model.rss), {}, {\n    type: 'rss-v2'\n  }, mapChannelFields(document)), {}, {\n    items: mapItems(document)\n  });\n};","map":{"version":3,"sources":["/home/popeye/project/fluidy/Fluidy-APP/node_modules/react-native-rss-parser/parsers/rssv2.js"],"names":["utils","require","model","namespaces","itunesParser","getChannelTitle","node","getElementTextContent","getChannelLinks","links","getChildElements","map","link","url","textContent","rel","getAttribute","getChannelDescription","getChannelLanguage","getChannelCopyright","getChannelAuthors","authors","getElementTextContentArray","author","name","getChannelLastUpdated","getChannelLastPublished","getChannelCategories","categories","category","getChannelImage","imageNodes","length","undefined","title","description","width","height","imageNode","getItemTitle","getItemLinks","getItemDescription","getItemContent","content","getItemAuthors","getItemCategories","getItemId","getItemPublished","getItemEnclosures","enclosures","enclosure","mimeType","mapChannelFields","document","channelNodes","getElements","Error","channelNode","language","copyright","lastUpdated","lastPublished","image","itunes","parseChannel","mapItems","itemNodes","item","id","published","parseItem","exports","parse","rss","type","items"],"mappings":"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","sourcesContent":["const utils = require('./utils');\r\nconst model = require('../model/rss');\r\nconst namespaces = require('./namespaces');\r\nconst itunesParser = require('./itunes');\r\n\r\nconst getChannelTitle = (node) => utils.getElementTextContent(node, 'title');\r\n\r\nconst getChannelLinks = (node) => {\r\n  const links = utils.getChildElements(node, 'link');\r\n\r\n  return links.map((link) => ({\r\n    url: link.textContent,\r\n    rel: link.getAttribute('rel'),\r\n  }));\r\n};\r\n\r\nconst getChannelDescription = (node) =>\r\n  utils.getElementTextContent(node, 'description');\r\n\r\nconst getChannelLanguage = (node) =>\r\n  utils.getElementTextContent(node, 'language');\r\n\r\nconst getChannelCopyright = (node) =>\r\n  utils.getElementTextContent(node, 'copyright');\r\n\r\nconst getChannelAuthors = (node) => {\r\n  const authors = utils.getElementTextContentArray(node, 'managingEditor');\r\n\r\n  return authors.map((author) => ({\r\n    name: author,\r\n  }));\r\n};\r\n\r\nconst getChannelLastUpdated = (node) =>\r\n  utils.getElementTextContent(node, 'lastBuildDate');\r\n\r\nconst getChannelLastPublished = (node) =>\r\n  utils.getElementTextContent(node, 'pubDate');\r\n\r\nconst getChannelCategories = (node) => {\r\n  const categories = utils.getElementTextContentArray(node, 'category');\r\n\r\n  return categories.map((category) => ({\r\n    name: category,\r\n  }));\r\n};\r\n\r\nconst getChannelImage = (node) => {\r\n  const imageNodes = utils.getChildElements(node, 'image');\r\n\r\n  if (imageNodes.length === 0) {\r\n    return {\r\n      url: undefined,\r\n      title: undefined,\r\n      description: undefined,\r\n      width: undefined,\r\n      height: undefined,\r\n    };\r\n  }\r\n\r\n  const imageNode = imageNodes[0];\r\n\r\n  return {\r\n    url: utils.getElementTextContent(imageNode, 'url'),\r\n    title: utils.getElementTextContent(imageNode, 'title'),\r\n    description: utils.getElementTextContent(imageNode, 'description'),\r\n    width: utils.getElementTextContent(imageNode, 'width'),\r\n    height: utils.getElementTextContent(imageNode, 'height'),\r\n  };\r\n};\r\n\r\nconst getItemTitle = (node) => utils.getElementTextContent(node, 'title');\r\n\r\nconst getItemLinks = (node) => {\r\n  const links = utils.getChildElements(node, 'link');\r\n\r\n  return links.map((link) => ({\r\n    url: link.textContent,\r\n    rel: link.getAttribute('rel'),\r\n  }));\r\n};\r\n\r\nconst getItemDescription = (node) =>\r\n  utils.getElementTextContent(node, 'description');\r\n\r\nconst getItemContent = (node) =>\r\n  utils.getElementTextContent(node, 'encoded', namespaces.content);\r\n\r\nconst getItemAuthors = (node) => {\r\n  let authors = utils.getElementTextContentArray(node, 'author');\r\n\r\n  if (authors.length === 0) {\r\n    authors = utils.getElementTextContentArray(node, 'dc:creator');\r\n  }\r\n\r\n  return authors.map((author) => ({\r\n    name: author,\r\n  }));\r\n};\r\n\r\nconst getItemCategories = (node) => {\r\n  let categories = utils.getElementTextContentArray(node, 'category');\r\n\r\n  if (categories.length === 0) {\r\n    categories = utils.getElementTextContentArray(node, 'dc:subject');\r\n  }\r\n\r\n  return categories.map((category) => ({\r\n    name: category,\r\n  }));\r\n};\r\n\r\nconst getItemId = (node) => utils.getElementTextContent(node, 'guid');\r\n\r\nconst getItemPublished = (node) =>\r\n  utils.getElementTextContent(node, 'pubDate') ||\r\n  utils.getElementTextContent(node, 'dc:date');\r\n\r\nconst getItemEnclosures = (node) => {\r\n  const enclosures = utils.getChildElements(node, 'enclosure');\r\n\r\n  return enclosures.map((enclosure) => ({\r\n    url: enclosure.getAttribute('url'),\r\n    length: enclosure.getAttribute('length'),\r\n    mimeType: enclosure.getAttribute('type'),\r\n  }));\r\n};\r\n\r\nconst mapChannelFields = (document) => {\r\n  const channelNodes = utils.getElements(document, 'channel');\r\n\r\n  if (!channelNodes || channelNodes.length === 0) {\r\n    throw new Error('Could not find channel node');\r\n  }\r\n\r\n  const channelNode = channelNodes[0];\r\n\r\n  return {\r\n    title: getChannelTitle(channelNode),\r\n    links: getChannelLinks(channelNode),\r\n    description: getChannelDescription(channelNode),\r\n    language: getChannelLanguage(channelNode),\r\n    copyright: getChannelCopyright(channelNode),\r\n    authors: getChannelAuthors(channelNode),\r\n    lastUpdated: getChannelLastUpdated(channelNode),\r\n    lastPublished: getChannelLastPublished(channelNode),\r\n    categories: getChannelCategories(channelNode),\r\n    image: getChannelImage(channelNode),\r\n    itunes: itunesParser.parseChannel(channelNode),\r\n  };\r\n};\r\n\r\nconst mapItems = (document) => {\r\n  const itemNodes = utils.getElements(document, 'item');\r\n\r\n  return itemNodes.map((item) => ({\r\n    title: getItemTitle(item),\r\n    links: getItemLinks(item),\r\n    description: getItemDescription(item),\r\n    content: getItemContent(item),\r\n    id: getItemId(item),\r\n    authors: getItemAuthors(item),\r\n    categories: getItemCategories(item),\r\n    published: getItemPublished(item),\r\n    enclosures: getItemEnclosures(item),\r\n    itunes: itunesParser.parseItem(item),\r\n  }));\r\n};\r\n\r\nexports.parse = (document) => ({\r\n  ...model.rss,\r\n  type: 'rss-v2',\r\n  ...mapChannelFields(document),\r\n  items: mapItems(document),\r\n});\r\n"]},"metadata":{},"sourceType":"script"}