{"ast":null,"code":"var _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar utils = require(\"./utils\");\n\nvar model = require(\"../model/rss\");\n\nvar itunesParser = require(\"./itunes\");\n\nvar getChannelTitle = function getChannelTitle(node) {\n  return utils.getElementTextContent(node, 'title');\n};\n\nvar getChannelLinks = function getChannelLinks(node) {\n  var links = utils.getChildElements(node, 'link');\n  return links.map(function (link) {\n    return {\n      url: link.getAttribute('href'),\n      rel: link.getAttribute('rel')\n    };\n  });\n};\n\nvar getChannelDescription = function getChannelDescription(node) {\n  return utils.getElementTextContent(node, 'subtitle');\n};\n\nvar getChannelCopyright = function getChannelCopyright(node) {\n  return utils.getElementTextContent(node, 'rights');\n};\n\nvar getChannelAuthors = function getChannelAuthors(node) {\n  var authors = utils.getChildElements(node, 'author');\n  return authors.map(function (author) {\n    return {\n      name: utils.getElementTextContent(author, 'name')\n    };\n  });\n};\n\nvar getChannelLastUpdated = function getChannelLastUpdated(node) {\n  return utils.getElementTextContent(node, 'updated');\n};\n\nvar getChannelLastPublished = function getChannelLastPublished(node) {\n  return utils.getElementTextContent(node, 'published');\n};\n\nvar getChannelCategories = function getChannelCategories(node) {\n  var categories = utils.getChildElements(node, 'category');\n  return categories.map(function (category) {\n    return {\n      name: category.getAttribute('term')\n    };\n  });\n};\n\nvar getChannelImage = function getChannelImage(node) {\n  var img = utils.getElementTextContent(node, 'image');\n\n  if (img === '' || img === undefined) {\n    img = utils.getElementTextContent(node, 'logo');\n  }\n\n  if (img === '' || img === undefined) {\n    img = utils.getElementTextContent(node, 'icon');\n  }\n\n  return {\n    url: img,\n    title: undefined,\n    description: undefined,\n    width: undefined,\n    height: undefined\n  };\n};\n\nvar getItemTitle = function getItemTitle(node) {\n  return utils.getElementTextContent(node, 'title');\n};\n\nvar getItemLinks = function getItemLinks(node) {\n  var links = utils.getChildElements(node, 'link');\n  var linksWithoutEnclosures = links.filter(function (link) {\n    return link.getAttribute('rel') !== 'enclosure';\n  });\n  return linksWithoutEnclosures.map(function (link) {\n    return {\n      url: link.getAttribute('href'),\n      rel: link.getAttribute('rel')\n    };\n  });\n};\n\nvar getItemDescription = function getItemDescription(node) {\n  return utils.getElementTextContent(node, 'summary');\n};\n\nvar getItemContent = function getItemContent(node) {\n  return utils.getElementTextContent(node, 'content');\n};\n\nvar getItemImage = function getItemImage(node) {\n  return utils.getElementTextContent(node, 'icon');\n};\n\nvar getItemAuthors = function getItemAuthors(node) {\n  var authors = utils.getChildElements(node, 'author');\n  return authors.map(function (author) {\n    return {\n      name: utils.getElementTextContent(author, 'name')\n    };\n  });\n};\n\nvar getItemCategories = function getItemCategories(node) {\n  var categories = utils.getChildElements(node, 'category');\n  return categories.map(function (category) {\n    return {\n      name: category.getAttribute('term')\n    };\n  });\n};\n\nvar getItemPublished = function getItemPublished(node) {\n  var pub = utils.getElementTextContent(node, 'updated');\n\n  if (pub === '' || pub === undefined) {\n    pub = utils.getElementTextContent(node, 'published');\n  }\n\n  return pub;\n};\n\nvar getItemId = function getItemId(node) {\n  return utils.getElementTextContent(node, 'id');\n};\n\nvar getItemEnclosures = function getItemEnclosures(node) {\n  var links = utils.getChildElements(node, 'link');\n  var enclosureLinks = links.filter(function (link) {\n    return link.getAttribute('rel') === 'enclosure';\n  });\n  return enclosureLinks.map(function (link) {\n    return {\n      url: link.getAttribute('href'),\n      length: link.getAttribute('length'),\n      mimeType: link.getAttribute('type')\n    };\n  });\n};\n\nvar mapChannelFields = function mapChannelFields(document) {\n  var channelNodes = utils.getElements(document, 'feed');\n\n  if (!channelNodes || channelNodes.length === 0) {\n    throw new Error('Could not find channel node');\n  }\n\n  var channelNode = channelNodes[0];\n  return {\n    title: getChannelTitle(channelNode),\n    links: getChannelLinks(channelNode),\n    description: getChannelDescription(channelNode),\n    copyright: getChannelCopyright(channelNode),\n    authors: getChannelAuthors(channelNode),\n    lastUpdated: getChannelLastUpdated(channelNode),\n    lastPublished: getChannelLastPublished(channelNode),\n    categories: getChannelCategories(channelNode),\n    image: getChannelImage(channelNode),\n    itunes: itunesParser.parseChannel(channelNode)\n  };\n};\n\nvar mapItems = function mapItems(document) {\n  var itemNodes = utils.getElements(document, 'entry');\n  return itemNodes.map(function (item) {\n    return {\n      title: getItemTitle(item),\n      links: getItemLinks(item),\n      description: getItemDescription(item),\n      id: getItemId(item),\n      imageUrl: getItemImage(item),\n      content: getItemContent(item),\n      authors: getItemAuthors(item),\n      categories: getItemCategories(item),\n      published: getItemPublished(item),\n      enclosures: getItemEnclosures(item),\n      itunes: itunesParser.parseItem(item)\n    };\n  });\n};\n\nexports.parse = function (document) {\n  return _objectSpread(_objectSpread(_objectSpread({}, model.rss), {}, {\n    type: 'atom-v1'\n  }, mapChannelFields(document)), {}, {\n    items: mapItems(document)\n  });\n};","map":{"version":3,"sources":["/home/popeye/project/fluidy/Fluidy-APP/node_modules/react-native-rss-parser/parsers/atomv1.js"],"names":["utils","require","model","itunesParser","getChannelTitle","node","getElementTextContent","getChannelLinks","links","getChildElements","map","link","url","getAttribute","rel","getChannelDescription","getChannelCopyright","getChannelAuthors","authors","author","name","getChannelLastUpdated","getChannelLastPublished","getChannelCategories","categories","category","getChannelImage","img","undefined","title","description","width","height","getItemTitle","getItemLinks","linksWithoutEnclosures","filter","getItemDescription","getItemContent","getItemImage","getItemAuthors","getItemCategories","getItemPublished","pub","getItemId","getItemEnclosures","enclosureLinks","length","mimeType","mapChannelFields","document","channelNodes","getElements","Error","channelNode","copyright","lastUpdated","lastPublished","image","itunes","parseChannel","mapItems","itemNodes","item","id","imageUrl","content","published","enclosures","parseItem","exports","parse","rss","type","items"],"mappings":";;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,WAArB;;AACA,IAAMC,KAAK,GAAGD,OAAO,gBAArB;;AACA,IAAME,YAAY,GAAGF,OAAO,YAA5B;;AAEA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD;AAAA,SAAUL,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,OAAlC,CAAV;AAAA,CAAxB;;AAEA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACF,IAAD,EAAU;AAChC,MAAMG,KAAK,GAAGR,KAAK,CAACS,gBAAN,CAAuBJ,IAAvB,EAA6B,MAA7B,CAAd;AAEA,SAAOG,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD;AAAA,WAAW;AAC1BC,MAAAA,GAAG,EAAED,IAAI,CAACE,YAAL,CAAkB,MAAlB,CADqB;AAE1BC,MAAAA,GAAG,EAAEH,IAAI,CAACE,YAAL,CAAkB,KAAlB;AAFqB,KAAX;AAAA,GAAV,CAAP;AAID,CAPD;;AASA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACV,IAAD;AAAA,SAC5BL,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,UAAlC,CAD4B;AAAA,CAA9B;;AAGA,IAAMW,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACX,IAAD;AAAA,SAC1BL,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,QAAlC,CAD0B;AAAA,CAA5B;;AAGA,IAAMY,iBAAiB,GAAG,SAApBA,iBAAoB,CAACZ,IAAD,EAAU;AAClC,MAAMa,OAAO,GAAGlB,KAAK,CAACS,gBAAN,CAAuBJ,IAAvB,EAA6B,QAA7B,CAAhB;AAEA,SAAOa,OAAO,CAACR,GAAR,CAAY,UAACS,MAAD;AAAA,WAAa;AAC9BC,MAAAA,IAAI,EAAEpB,KAAK,CAACM,qBAAN,CAA4Ba,MAA5B,EAAoC,MAApC;AADwB,KAAb;AAAA,GAAZ,CAAP;AAGD,CAND;;AAQA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAChB,IAAD;AAAA,SAC5BL,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,SAAlC,CAD4B;AAAA,CAA9B;;AAGA,IAAMiB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACjB,IAAD;AAAA,SAC9BL,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,WAAlC,CAD8B;AAAA,CAAhC;;AAGA,IAAMkB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAClB,IAAD,EAAU;AACrC,MAAMmB,UAAU,GAAGxB,KAAK,CAACS,gBAAN,CAAuBJ,IAAvB,EAA6B,UAA7B,CAAnB;AAEA,SAAOmB,UAAU,CAACd,GAAX,CAAe,UAACe,QAAD;AAAA,WAAe;AACnCL,MAAAA,IAAI,EAAEK,QAAQ,CAACZ,YAAT,CAAsB,MAAtB;AAD6B,KAAf;AAAA,GAAf,CAAP;AAGD,CAND;;AAQA,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACrB,IAAD,EAAU;AAChC,MAAIsB,GAAG,GAAG3B,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,OAAlC,CAAV;;AAEA,MAAIsB,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAKC,SAA1B,EAAqC;AACnCD,IAAAA,GAAG,GAAG3B,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,MAAlC,CAAN;AACD;;AAED,MAAIsB,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAKC,SAA1B,EAAqC;AACnCD,IAAAA,GAAG,GAAG3B,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,MAAlC,CAAN;AACD;;AAED,SAAO;AACLO,IAAAA,GAAG,EAAEe,GADA;AAELE,IAAAA,KAAK,EAAED,SAFF;AAGLE,IAAAA,WAAW,EAAEF,SAHR;AAILG,IAAAA,KAAK,EAAEH,SAJF;AAKLI,IAAAA,MAAM,EAAEJ;AALH,GAAP;AAOD,CAlBD;;AAoBA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAC5B,IAAD;AAAA,SAAUL,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,OAAlC,CAAV;AAAA,CAArB;;AAEA,IAAM6B,YAAY,GAAG,SAAfA,YAAe,CAAC7B,IAAD,EAAU;AAC7B,MAAMG,KAAK,GAAGR,KAAK,CAACS,gBAAN,CAAuBJ,IAAvB,EAA6B,MAA7B,CAAd;AACA,MAAM8B,sBAAsB,GAAG3B,KAAK,CAAC4B,MAAN,CAC7B,UAACzB,IAAD;AAAA,WAAUA,IAAI,CAACE,YAAL,CAAkB,KAAlB,MAA6B,WAAvC;AAAA,GAD6B,CAA/B;AAIA,SAAOsB,sBAAsB,CAACzB,GAAvB,CAA2B,UAACC,IAAD;AAAA,WAAW;AAC3CC,MAAAA,GAAG,EAAED,IAAI,CAACE,YAAL,CAAkB,MAAlB,CADsC;AAE3CC,MAAAA,GAAG,EAAEH,IAAI,CAACE,YAAL,CAAkB,KAAlB;AAFsC,KAAX;AAAA,GAA3B,CAAP;AAID,CAVD;;AAYA,IAAMwB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAChC,IAAD;AAAA,SACzBL,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,SAAlC,CADyB;AAAA,CAA3B;;AAGA,IAAMiC,cAAc,GAAG,SAAjBA,cAAiB,CAACjC,IAAD;AAAA,SAAUL,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,SAAlC,CAAV;AAAA,CAAvB;;AAEA,IAAMkC,YAAY,GAAG,SAAfA,YAAe,CAAClC,IAAD;AAAA,SAAUL,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,MAAlC,CAAV;AAAA,CAArB;;AAEA,IAAMmC,cAAc,GAAG,SAAjBA,cAAiB,CAACnC,IAAD,EAAU;AAC/B,MAAMa,OAAO,GAAGlB,KAAK,CAACS,gBAAN,CAAuBJ,IAAvB,EAA6B,QAA7B,CAAhB;AAEA,SAAOa,OAAO,CAACR,GAAR,CAAY,UAACS,MAAD;AAAA,WAAa;AAC9BC,MAAAA,IAAI,EAAEpB,KAAK,CAACM,qBAAN,CAA4Ba,MAA5B,EAAoC,MAApC;AADwB,KAAb;AAAA,GAAZ,CAAP;AAGD,CAND;;AAQA,IAAMsB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACpC,IAAD,EAAU;AAClC,MAAMmB,UAAU,GAAGxB,KAAK,CAACS,gBAAN,CAAuBJ,IAAvB,EAA6B,UAA7B,CAAnB;AAEA,SAAOmB,UAAU,CAACd,GAAX,CAAe,UAACe,QAAD;AAAA,WAAe;AACnCL,MAAAA,IAAI,EAAEK,QAAQ,CAACZ,YAAT,CAAsB,MAAtB;AAD6B,KAAf;AAAA,GAAf,CAAP;AAGD,CAND;;AAQA,IAAM6B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACrC,IAAD,EAAU;AACjC,MAAIsC,GAAG,GAAG3C,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,SAAlC,CAAV;;AAEA,MAAIsC,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAKf,SAA1B,EAAqC;AACnCe,IAAAA,GAAG,GAAG3C,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,WAAlC,CAAN;AACD;;AAED,SAAOsC,GAAP;AACD,CARD;;AAUA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACvC,IAAD;AAAA,SAAUL,KAAK,CAACM,qBAAN,CAA4BD,IAA5B,EAAkC,IAAlC,CAAV;AAAA,CAAlB;;AAEA,IAAMwC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACxC,IAAD,EAAU;AAClC,MAAMG,KAAK,GAAGR,KAAK,CAACS,gBAAN,CAAuBJ,IAAvB,EAA6B,MAA7B,CAAd;AACA,MAAMyC,cAAc,GAAGtC,KAAK,CAAC4B,MAAN,CACrB,UAACzB,IAAD;AAAA,WAAUA,IAAI,CAACE,YAAL,CAAkB,KAAlB,MAA6B,WAAvC;AAAA,GADqB,CAAvB;AAIA,SAAOiC,cAAc,CAACpC,GAAf,CAAmB,UAACC,IAAD;AAAA,WAAW;AACnCC,MAAAA,GAAG,EAAED,IAAI,CAACE,YAAL,CAAkB,MAAlB,CAD8B;AAEnCkC,MAAAA,MAAM,EAAEpC,IAAI,CAACE,YAAL,CAAkB,QAAlB,CAF2B;AAGnCmC,MAAAA,QAAQ,EAAErC,IAAI,CAACE,YAAL,CAAkB,MAAlB;AAHyB,KAAX;AAAA,GAAnB,CAAP;AAKD,CAXD;;AAaA,IAAMoC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACrC,MAAMC,YAAY,GAAGnD,KAAK,CAACoD,WAAN,CAAkBF,QAAlB,EAA4B,MAA5B,CAArB;;AAEA,MAAI,CAACC,YAAD,IAAiBA,YAAY,CAACJ,MAAb,KAAwB,CAA7C,EAAgD;AAC9C,UAAM,IAAIM,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,MAAMC,WAAW,GAAGH,YAAY,CAAC,CAAD,CAAhC;AAEA,SAAO;AACLtB,IAAAA,KAAK,EAAEzB,eAAe,CAACkD,WAAD,CADjB;AAEL9C,IAAAA,KAAK,EAAED,eAAe,CAAC+C,WAAD,CAFjB;AAGLxB,IAAAA,WAAW,EAAEf,qBAAqB,CAACuC,WAAD,CAH7B;AAILC,IAAAA,SAAS,EAAEvC,mBAAmB,CAACsC,WAAD,CAJzB;AAKLpC,IAAAA,OAAO,EAAED,iBAAiB,CAACqC,WAAD,CALrB;AAMLE,IAAAA,WAAW,EAAEnC,qBAAqB,CAACiC,WAAD,CAN7B;AAOLG,IAAAA,aAAa,EAAEnC,uBAAuB,CAACgC,WAAD,CAPjC;AAQL9B,IAAAA,UAAU,EAAED,oBAAoB,CAAC+B,WAAD,CAR3B;AASLI,IAAAA,KAAK,EAAEhC,eAAe,CAAC4B,WAAD,CATjB;AAULK,IAAAA,MAAM,EAAExD,YAAY,CAACyD,YAAb,CAA0BN,WAA1B;AAVH,GAAP;AAYD,CArBD;;AAuBA,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACX,QAAD,EAAc;AAC7B,MAAMY,SAAS,GAAG9D,KAAK,CAACoD,WAAN,CAAkBF,QAAlB,EAA4B,OAA5B,CAAlB;AAEA,SAAOY,SAAS,CAACpD,GAAV,CAAc,UAACqD,IAAD;AAAA,WAAW;AAC9BlC,MAAAA,KAAK,EAAEI,YAAY,CAAC8B,IAAD,CADW;AAE9BvD,MAAAA,KAAK,EAAE0B,YAAY,CAAC6B,IAAD,CAFW;AAG9BjC,MAAAA,WAAW,EAAEO,kBAAkB,CAAC0B,IAAD,CAHD;AAI9BC,MAAAA,EAAE,EAAEpB,SAAS,CAACmB,IAAD,CAJiB;AAK9BE,MAAAA,QAAQ,EAAE1B,YAAY,CAACwB,IAAD,CALQ;AAM9BG,MAAAA,OAAO,EAAE5B,cAAc,CAACyB,IAAD,CANO;AAO9B7C,MAAAA,OAAO,EAAEsB,cAAc,CAACuB,IAAD,CAPO;AAQ9BvC,MAAAA,UAAU,EAAEiB,iBAAiB,CAACsB,IAAD,CARC;AAS9BI,MAAAA,SAAS,EAAEzB,gBAAgB,CAACqB,IAAD,CATG;AAU9BK,MAAAA,UAAU,EAAEvB,iBAAiB,CAACkB,IAAD,CAVC;AAW9BJ,MAAAA,MAAM,EAAExD,YAAY,CAACkE,SAAb,CAAuBN,IAAvB;AAXsB,KAAX;AAAA,GAAd,CAAP;AAaD,CAhBD;;AAkBAO,OAAO,CAACC,KAAR,GAAgB,UAACrB,QAAD;AAAA,uDACXhD,KAAK,CAACsE,GADK;AAEdC,IAAAA,IAAI,EAAE;AAFQ,KAGXxB,gBAAgB,CAACC,QAAD,CAHL;AAIdwB,IAAAA,KAAK,EAAEb,QAAQ,CAACX,QAAD;AAJD;AAAA,CAAhB","sourcesContent":["const utils = require('./utils');\r\nconst model = require('../model/rss');\r\nconst itunesParser = require('./itunes');\r\n\r\nconst getChannelTitle = (node) => utils.getElementTextContent(node, 'title');\r\n\r\nconst getChannelLinks = (node) => {\r\n  const links = utils.getChildElements(node, 'link');\r\n\r\n  return links.map((link) => ({\r\n    url: link.getAttribute('href'),\r\n    rel: link.getAttribute('rel'),\r\n  }));\r\n};\r\n\r\nconst getChannelDescription = (node) =>\r\n  utils.getElementTextContent(node, 'subtitle');\r\n\r\nconst getChannelCopyright = (node) =>\r\n  utils.getElementTextContent(node, 'rights');\r\n\r\nconst getChannelAuthors = (node) => {\r\n  const authors = utils.getChildElements(node, 'author');\r\n\r\n  return authors.map((author) => ({\r\n    name: utils.getElementTextContent(author, 'name'),\r\n  }));\r\n};\r\n\r\nconst getChannelLastUpdated = (node) =>\r\n  utils.getElementTextContent(node, 'updated');\r\n\r\nconst getChannelLastPublished = (node) =>\r\n  utils.getElementTextContent(node, 'published');\r\n\r\nconst getChannelCategories = (node) => {\r\n  const categories = utils.getChildElements(node, 'category');\r\n\r\n  return categories.map((category) => ({\r\n    name: category.getAttribute('term'),\r\n  }));\r\n};\r\n\r\nconst getChannelImage = (node) => {\r\n  let img = utils.getElementTextContent(node, 'image');\r\n\r\n  if (img === '' || img === undefined) {\r\n    img = utils.getElementTextContent(node, 'logo');\r\n  }\r\n\r\n  if (img === '' || img === undefined) {\r\n    img = utils.getElementTextContent(node, 'icon');\r\n  }\r\n\r\n  return {\r\n    url: img,\r\n    title: undefined,\r\n    description: undefined,\r\n    width: undefined,\r\n    height: undefined,\r\n  };\r\n};\r\n\r\nconst getItemTitle = (node) => utils.getElementTextContent(node, 'title');\r\n\r\nconst getItemLinks = (node) => {\r\n  const links = utils.getChildElements(node, 'link');\r\n  const linksWithoutEnclosures = links.filter(\r\n    (link) => link.getAttribute('rel') !== 'enclosure'\r\n  );\r\n\r\n  return linksWithoutEnclosures.map((link) => ({\r\n    url: link.getAttribute('href'),\r\n    rel: link.getAttribute('rel'),\r\n  }));\r\n};\r\n\r\nconst getItemDescription = (node) =>\r\n  utils.getElementTextContent(node, 'summary');\r\n\r\nconst getItemContent = (node) => utils.getElementTextContent(node, 'content');\r\n\r\nconst getItemImage = (node) => utils.getElementTextContent(node, 'icon');\r\n\r\nconst getItemAuthors = (node) => {\r\n  const authors = utils.getChildElements(node, 'author');\r\n\r\n  return authors.map((author) => ({\r\n    name: utils.getElementTextContent(author, 'name'),\r\n  }));\r\n};\r\n\r\nconst getItemCategories = (node) => {\r\n  const categories = utils.getChildElements(node, 'category');\r\n\r\n  return categories.map((category) => ({\r\n    name: category.getAttribute('term'),\r\n  }));\r\n};\r\n\r\nconst getItemPublished = (node) => {\r\n  let pub = utils.getElementTextContent(node, 'updated');\r\n\r\n  if (pub === '' || pub === undefined) {\r\n    pub = utils.getElementTextContent(node, 'published');\r\n  }\r\n\r\n  return pub;\r\n};\r\n\r\nconst getItemId = (node) => utils.getElementTextContent(node, 'id');\r\n\r\nconst getItemEnclosures = (node) => {\r\n  const links = utils.getChildElements(node, 'link');\r\n  const enclosureLinks = links.filter(\r\n    (link) => link.getAttribute('rel') === 'enclosure'\r\n  );\r\n\r\n  return enclosureLinks.map((link) => ({\r\n    url: link.getAttribute('href'),\r\n    length: link.getAttribute('length'),\r\n    mimeType: link.getAttribute('type'),\r\n  }));\r\n};\r\n\r\nconst mapChannelFields = (document) => {\r\n  const channelNodes = utils.getElements(document, 'feed');\r\n\r\n  if (!channelNodes || channelNodes.length === 0) {\r\n    throw new Error('Could not find channel node');\r\n  }\r\n\r\n  const channelNode = channelNodes[0];\r\n\r\n  return {\r\n    title: getChannelTitle(channelNode),\r\n    links: getChannelLinks(channelNode),\r\n    description: getChannelDescription(channelNode),\r\n    copyright: getChannelCopyright(channelNode),\r\n    authors: getChannelAuthors(channelNode),\r\n    lastUpdated: getChannelLastUpdated(channelNode),\r\n    lastPublished: getChannelLastPublished(channelNode),\r\n    categories: getChannelCategories(channelNode),\r\n    image: getChannelImage(channelNode),\r\n    itunes: itunesParser.parseChannel(channelNode),\r\n  };\r\n};\r\n\r\nconst mapItems = (document) => {\r\n  const itemNodes = utils.getElements(document, 'entry');\r\n\r\n  return itemNodes.map((item) => ({\r\n    title: getItemTitle(item),\r\n    links: getItemLinks(item),\r\n    description: getItemDescription(item),\r\n    id: getItemId(item),\r\n    imageUrl: getItemImage(item),\r\n    content: getItemContent(item),\r\n    authors: getItemAuthors(item),\r\n    categories: getItemCategories(item),\r\n    published: getItemPublished(item),\r\n    enclosures: getItemEnclosures(item),\r\n    itunes: itunesParser.parseItem(item),\r\n  }));\r\n};\r\n\r\nexports.parse = (document) => ({\r\n  ...model.rss,\r\n  type: 'atom-v1',\r\n  ...mapChannelFields(document),\r\n  items: mapItems(document),\r\n});\r\n"]},"metadata":{},"sourceType":"script"}